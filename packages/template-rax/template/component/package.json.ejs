{
  "name": "<%= npmName %>",
  "version": "<%= version %>",
  "description": "<%= description %>",
  "main": "lib/index.js",
  "module": "es/index.js",
  <%_ if (typeof miniappComponentBuildType !== 'undefined' && miniappComponentBuildType === 'compile') { -%>
  "miniappConfig": {
    "main": "lib/miniapp/index",
    "main:wechat": "lib/wechat-miniprogram/index"
  },
  <%_ } -%>
  "exports": {
    ".":{
      <%_ projectTargets.forEach(function(target) { _%>
    "<%= target %>": "./es/<%= target %>/index.js",
      <%_ })_%>
      "default": "./es/index.js"
    },
    "./*": "./*"
  },
  "files": [
    "build",
    "dist",
    "es",
    "lib"
  ],
  "keywords": [
    "Rax",
    "rax-component"
  ],
  "engines": {
    "npm": ">=3.0.0"
  },
  "scripts": {
    "start": "build-scripts start",
    "build": "build-scripts build",
    "eslint": "eslint --ext .js,.jsx,.ts,.tsx ./",
    "eslint:fix": "npm run eslint -- --fix",
    "stylelint": "stylelint \"**/*.{css,scss,less}\"",
    "lint": "npm run eslint && npm run stylelint",
    "prepublishOnly": "npm run build"
  },
  "dependencies": {
    "rax-text": "^2.0.0",
    "rax-view": "^2.0.0",
    "universal-env": "^3.0.0"
  },
  "peerDependencies": {
    <%_ if (projectTargets.includes('miniapp') || projectTargets.includes('wechat-miniprogram')) { -%>
    "jsx2mp-runtime": "^0.4.8",
    <%_ } -%>
    "rax": "^1.1.0"
  },
  "devDependencies": {
    "@alib/build-scripts": "^0.1.0",
    <% if(typeof isAliInternal !== 'undefined' && isAliInternal && projectTargets.includes('miniapp')) {%>
      "@ali/build-plugin-miniapp-preview":"^1.1.0",
    <%}%>
    "@iceworks/spec": "^1.0.0",
    "@types/rax": "^1.0.0",
    "build-plugin-component": "^1.0.0",
    "driver-universal": "^3.1.0",
    "eslint": "^7.0.0",
    "stylelint": "^13.7.2",
    "rax": "^1.1.0",
    "rax-test-renderer": "^1.0.0"
  },
  "componentConfig": {
    "name": "<%= name %>",
    "title": "<%= title %>",
    "category": "<%= category %>"
  },
  "publishConfig": {
    "access": "public"
  },
  "license": "MIT"
}
